{"version":3,"sources":["components/axiosservice.js","components/config/keys.js","components/Home.jsx","components/Header.jsx","components/Footer.jsx","components/Form.jsx","components/NotFound.jsx","App.js","serviceWorker.js","index.js"],"names":["getBookById","bookId","axios","get","then","res","data","catch","err","Promise","reject","Home","deleteBook","id","originalState","state","books","filter","p","_id","setState","delete","toast","error","deleted","this","console","log","style","borderCollapse","map","book","i","key","title","author","publisher","to","className","onClick","Component","Header","Footer","props","href","Form","onChange","e","currentTarget","name","value","onSuccess","success","setTimeout","window","location","onSubmit","preventDefault","bookData","match","params","patch","axiosService","post","type","required","NotFound","App","path","component","exact","from","Boolean","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.aec3898f.chunk.js","sourcesContent":["import axios from \"axios\";\r\nimport config from \"./config/keys\";\r\n\r\nexport function getBookById(bookId) {\r\n  return axios\r\n    .get(`${config()}/books/${bookId}`)\r\n    .then(res => {\r\n        \r\n      return res.data;\r\n    })\r\n    .catch(err => {\r\n      Promise.reject(err);\r\n    });\r\n}\r\nexport function createBook(bookData) {\r\n  return axios\r\n    .post(`${config()}/books/`, {bookData})\r\n    .then(res => {\r\n        \r\n      return res.data;\r\n    })\r\n    .catch(err => {\r\n        \r\n      return Promise.reject(err);\r\n    });\r\n}\r\nexport function updateBook(bookData, bookId) {\r\n    return axios\r\n      .patch(`${config()}/books/${bookId}`, { bookData })\r\n      .then(res => {\r\n        return res.data;\r\n      })\r\n      .catch(err => {\r\n        Promise.reject(err);\r\n      });\r\n  }\r\n  \r\n  export function deleteBook(bookId) {\r\n    return axios\r\n      .delete(`${config()}/books/${bookId}`)\r\n      .then(res => {\r\n        return res.data;\r\n      })\r\n      .catch(err => {\r\n        Promise.reject(err);\r\n      });\r\n  }\r\n  ","\r\n\r\n    export default function apiUrl() {\r\n        let apiUri = process.env.REACT_APP_API_URL \r\n        if(process.env.NODE_ENV === 'production'){\r\n            apiUri =\"https://shaibanihomework.herokuapp.com/api/v1\"}\r\n            else{\r\n                apiUri=\"http://localhost:3001/api/v1\"\r\n            }\r\n            return apiUri;\r\n    }\r\n ","import React, { Component } from \"react\";\r\nimport {Link} from 'react-router-dom'\r\nimport axios from \"axios\";\r\nimport {toast} from 'react-toastify'\r\nimport config from \"./config/keys\";\r\nimport * as actions from './axiosservice'\r\n\r\nexport default class Home extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      books: [],\r\n      deleted:false\r\n    };\r\n  }\r\n  async componentDidMount() {\r\n    const apiUrl = config() ;\r\n    try {\r\n      debugger;\r\n      const res = await axios.get(`${apiUrl}/books`);\r\n      this.setState({\r\n        books: res.data\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n  deleteBook=(id)=>{\r\n    const originalState = this.state.books;\r\n    const books = this.state.books.filter(p=> p._id !== id);\r\n    debugger\r\n    this.setState({\r\n      books\r\n    });\r\n    actions.deleteBook(id).then(res=>{\r\n      \r\n    }).catch(err=>{\r\n      toast.error(\"Error \");\r\n      this.setState({\r\n        books:originalState\r\n      })\r\n    })\r\n  }\r\n  render() {\r\n    const { books } = this.state;\r\n    return (\r\n      <section>\r\n        <h2>Data of Books: Select</h2>\r\n        <table style={{ borderCollapse: \"collapse\" }}>\r\n          <thead>\r\n            <tr>\r\n              <th>No.</th>\r\n              <th>Title</th>\r\n              <th>Author</th>\r\n              <th>Publisher</th>\r\n              <th>Action</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {books.map((book, i) => {\r\n              return (\r\n                <tr key={1}>\r\n                  <td>\r\n                    {\" \"}\r\n                    {i + 1} {\"   \"}{\" \"}\r\n                  </td>\r\n                  <td>\r\n                    {\" \"}\r\n                    {book.title} {\"   \"}{\" \"}\r\n                  </td>\r\n                  <td>\r\n                    {\" \"}\r\n                    {book.author} {\"   \"}{\" \"}\r\n                  </td>\r\n                  <td> {book.publisher}</td>\r\n                  <td>\r\n                    <Link to={`/home/${book._id}`} className=\"link\">Modify</Link> |\r\n                    <button onClick={()=>this.deleteBook(book._id)} className=\"link\">Delete</button>\r\n                  </td>\r\n                </tr>\r\n              );\r\n            })}\r\n            <tr>\r\n              {/* <td colspan=\"5\" style=\"text-align: center; color: #f00\">Data not found</td> */}\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport {Link} from 'react-router-dom'\r\n\r\nexport default function Header() {\r\n    return (\r\n        <header>\r\n            <div className=\"title\">\r\n                <Link to=\"/\"><h1>CRUD MySQLi ( Procedural ) </h1></Link>\r\n            </div>\r\n            <nav className=\"nav\">\r\n                <ul>\r\n                    <li><Link to=\"/\" className=\"link\">Home</Link></li>\r\n                    <li><Link to=\"/home/new\" className=\"link\">Insert</Link></li>\r\n                </ul>\r\n            </nav>\r\n        </header>\r\n    )\r\n}\r\n","import React from \"react\";\r\n\r\nfunction Footer(props) {\r\n  return (\r\n    <footer\r\n     className=\"footer\">\r\n      <a\r\n        href=\"http://www.ust.edu/ustj/component/k2/item/2437-\"\r\n        \r\n      >\r\n        {\" \"}\r\n        Copyright &copy; 2016 Mohammed Aqlan, UST{\" \"}\r\n      </a>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import React, { Component } from \"react\";\r\nimport * as axiosService from \"./axiosservice\";\r\n\r\nimport { toast } from \"react-toastify\";\r\n\r\nexport default class Form extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      data: {\r\n        title: \"\",\r\n        author: \"\",\r\n        publisher: \"\"\r\n      },\r\n      success: false\r\n    };\r\n  }\r\n  async componentDidMount() {\r\n    const bookId = this.props.match.params.id;\r\n    if (bookId === \"new\") {\r\n      return;\r\n    }\r\n    axiosService.getBookById(bookId).then(data => {\r\n      debugger;\r\n      this.setState({\r\n        data\r\n      });\r\n    });\r\n  }\r\n  onChange = e => {\r\n    const data = { ...this.state.data };\r\n\r\n    data[e.currentTarget.name] = e.currentTarget.value;\r\n\r\n    this.setState({ data });\r\n  };\r\n  onSuccess = () => {\r\n    toast.success(\"Success: Redirecting...\");\r\n    setTimeout(() => {\r\n      window.location = \"/\";\r\n    }, 1000);\r\n  };\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n    const bookData = { ...this.state.data };\r\n    const bookId = this.props.match.params.id;\r\n\r\n    debugger;\r\n    if (bookId !== \"new\") {\r\n      axiosService\r\n        .updateBook(bookData, bookId)\r\n        .then(e => {\r\n          this.onSuccess();\r\n        })\r\n        .catch(err => {\r\n          toast.error(\"Error \");\r\n        });\r\n    } else {\r\n      axiosService\r\n        .createBook(bookData)\r\n        .then(e => {\r\n          this.onSuccess();\r\n        })\r\n        .catch(err => {\r\n          toast.error(\"Error \");\r\n        });\r\n    }\r\n  };\r\n  render() {\r\n    const {\r\n      data: { title, author, publisher },\r\n      success\r\n    } = this.state;\r\n    return (\r\n      <section>\r\n        <div className=\"has-form\">\r\n          <h2>Data of Books</h2>\r\n          {success && <p className=\"message\">Save success</p>}\r\n          <form onSubmit={this.onSubmit}>\r\n            <label>\r\n              Title\r\n              <input\r\n                type=\"text\"\r\n                name=\"title\"\r\n                required\r\n                value={title}\r\n                onChange={this.onChange}\r\n              />\r\n            </label>\r\n            <br></br>\r\n            <label>\r\n              Author\r\n              <input\r\n                type=\"text\"\r\n                name=\"author\"\r\n                required\r\n                value={author}\r\n                onChange={this.onChange}\r\n              />\r\n            </label>\r\n            <br></br>\r\n            <label>\r\n              Publisher\r\n              <input\r\n                type=\"text\"\r\n                name=\"publisher\"\r\n                required\r\n                value={publisher}\r\n                onChange={this.onChange}\r\n              />\r\n            </label>\r\n            <br></br>\r\n            <input type=\"submit\" name=\"save\" value=\"Save\" className=\"link\" />\r\n          </form>\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n","import React from 'react'\r\n\r\nfunction NotFound(props) {\r\n    return (\r\n        <div>\r\n           <h1> NotFound </h1>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default NotFound\r\n\r\n","import React from \"react\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport \"./App.css\";\nimport 'react-toastify/dist/ReactToastify.min.css'\nimport Home from \"./components/Home\";\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\nimport Form from \"./components/Form\";\nimport NotFound from \"./components/NotFound\";\nimport { ToastContainer } from \"react-toastify\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <ToastContainer />\n      <Switch>\n        <Route path=\"/home/:id\" component={Form} />\n        <Route exact path=\"/home\" component={Home} />\n        <Route path=\"/notFound\" component={NotFound} />\n        <Redirect from=\"/\" to=\"/home\" />\n        <Redirect to=\"/notFound\" />\n      </Switch>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter} from 'react-router-dom'\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <BrowserRouter>\n    <App />\n    </BrowserRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}